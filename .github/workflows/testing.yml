name: Testing Pipeline

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Pull package data
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup up uv
        run: curl -LsSf https://astral.sh/uv/0.4.5/install.sh | sh

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run code linting
        run: uv run ruff check tenint --exit-zero

      - name: Run unit tests
        run: uv run pytest tests --cov-report xml:cov/coverage.xml

      - name: Save Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage_report
          path: cov
          retention-days: 1

  security_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Pull package data
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - name: Setup up uv
        run: curl -LsSf https://astral.sh/uv/0.4.5/install.sh | sh
        
      - name: Run pip-audit
        run: |
          uv export --format requirements-txt | uv tool run pip-audit
          
      - name: Run Bandit code auditor
        run: uv tool run --with "bandit[toml,baseline,sarif]" bandit -c pyproject.toml -r . -ll
