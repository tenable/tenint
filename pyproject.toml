[project]
dynamic = ["version"]
name = "tenint"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Tenable Ecosystem Support", email = "ecosystem-support@tenable.com" },
    {name = "Steve McGrath", email = "smcgrath@tenable.com" },
]
dependencies = [
    "email-validator>=2.2.0",
    "pydantic-settings>=2.6.1",
    "pydantic>=2.9.2",
    "requests>=2.32.3",
    "restfly>=1.5.0",
    "rich>=13.9.3",
    "tomlkit>=0.13.2",
    "typer>=0.12.5",
]

[project.scripts]
tenint = "tenint.cli:app"

[project.optional-dependencies]
testing = [
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
    "ruff>=0.7.1",
    "responses>=0.25.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "tenint/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "tenint/*py",
    "tenint/models/*py",
    "tenint/templates"
]

[tool.uv]
dev-dependencies = [
    "ptpython>=3.0.29",
    "pyright>=1.1.386",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
    "responses>=0.25.3",
    "ruff>=0.7.1",
    "tenint",
]

[tool.uv.sources]
tenint = { workspace = true }

[tool.ruff]
line-length = 88
indent-width = 4
exclude = [
  ".nova",
  ".github",
  ".git",
  ".pytest_cache",
  "__pycache__"
]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B"]
fixable = [ "ALL" ]
unfixable = [ "B" ]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.pytest.ini_options]
addopts = "--cov=tenint --cov-report term-missing"
testpaths = ["tests"]
pythonpath = [ "." ]
